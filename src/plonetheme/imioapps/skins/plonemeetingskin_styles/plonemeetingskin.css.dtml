/*
 *  This is the file where you put your CSS changes. 
 *  You should preferrably use this and override the 
 *  relevant properties you want to change here instead 
 *  of customizing plone.css to survive upgrades. Writing
 *  your own plone.css only makes sense for very heavy 
 *  customizations. Useful variables from Plone are 
 *  documented at the bottom of this file.
 */
 
/* <dtml-with base_properties> (do not remove this :) */
/* <dtml-call "REQUEST.set('portal_url', portal_url())"> (not this either :) */


/* display the category list correctly */
#category {
    color: ButtonText;
    font-size: inherit;
    margin-bottom: inherit;
    text-align: inherit;
}

/* souligner le titre H1 */
#content h1.documentFirstHeading {
    border-bottom: 1px solid &dtml-globalBorderColor;;
    margin-bottom: 0.5em;
    margin-top: 0.5em;
}

.ploneMeetingRef{ vertical-align: middle; }

.portletHs {
    border-radius: 5px 5px 5px 5px;
}

/* wf states specific colors, based on wf from MeetingCommunes */
#content a.state-itemcreated, #content .state-itemcreated, #content a.label-state-itemcreated {
    color: red !important;
}
#plone-contentmenu-workflow .state-itemcreated {
    border-radius: 0.5em 0.5em 0.5em 0.5em;
    background-color: red;
    padding: 0 0.5em;
    color: white !important;
    border: 2px solid red;
}

#editAdviceForm > select {
    vertical-align: baseline;
}

#objectHistory {
    margin-bottom: 0.5em;
    margin-top: 0.5em;
}

#objectHistory_img {
  margin-top: 0px;
}

/* do not fix height or title of topics can not be displayed on 2 lines */
.portletSection {
    height: auto;
}

#portletplonemeeting .portletHeader td {
color: white !important;
}

.portletHs .portletHeader td{
    padding-top: 1px;
    padding-bottom: 1px;
}

.portletTodo {
border: &dtml-borderStyle; &dtml-borderWidth; &dtml-globalBorderColor;;
}

.portletHeader table td, .portletHeader table td a {
background-color: &dtml-globalBackgroundColor;;
color:white !important;
text-align: left;
}

.portletMeetingItem {
border-left:1px solid &dtml-globalBorderColor;;
border-right:1px solid &dtml-globalBorderColor;;
padding:1px 0 0 0 ;
}

.portletMeetingItem a {
padding-left:5px;
}

.portletMeetingElementSelected {
background-color: #E6EBF0;
}

.portletMeetingElementSelected a {
color:#496A93;
}

.pmButton {
background-position: 5px 4px;
color: white;
}

.pmLinks a:hover{
color:#436976 !important;
}

.hsButton {
    border-radius: 5px;
    background-repeat: no-repeat;
    background-color: &dtml-buttonBackgroundColor;;
    border: 1px solid &dtml-globalBackgroundColor;;
    padding-left: 5px;
    padding-right: 5px;
    padding-bottom: 2px;
    font-size: 90%;
    height: 2em;
    color: &dtml-buttonTextColor;;
}

.fakeButton {
    background: url("&dtml-portal_url;/fakeTransition.gif") no-repeat scroll 3px 4px #FFD5C0;
    cursor: help;
    font-style: italic;
    padding-left: 8px;
}

.hsButtonWF {
    color: white;
    background-color: &dtml-globalBackgroundColor;;
}

.hsButtonAction {
    color: &dtml-buttonTextColor;;
    background-position: 3px 4px;
    padding-left: 18px;
}

.hsButtonAction_delete {
    background-image: url('&dtml-portal_url;/delete_icon.gif');
}

.hsButtonAction_duplicate {
    background-image: url('&dtml-portal_url;/copy_icon.gif');
}

.hsButtonAction_duplicate_and_keep_link {
    background-image: url('&dtml-portal_url;/duplicate_and_keep_link.gif');
}

.hsButtonAction_deleteWholeMeeting {
    background-image: url('&dtml-portal_url;/delete_many.gif');
}

.hsButtonAction_rename {
    background-image: url('&dtml-portal_url;/rename_icon.gif');
}


.portletMeetingItem p {
margin: 0;
}

/* Adapt default collapsible to correspond to the recoded same thing in PM... */
dl.collapsedInlineCollapsible, dt.collapsibleHeader {
background-position: 0px !important;
font-weight: normal;
font-style: italic;
font-size: 100% !important;
}

dl.collapsible {
border: 0 !important;
}

dl.collapsible dt.collapsibleHeader {
margin-left: 0px;
}

dd.collapsibleContent {
padding: 0 !important;
}

.ploneMeetingSelectItemUnselected {
  color: white;
}

/* this avoid space between the field title and the FCKeditor widget */
.fckSaveField {
height: 0;
}

.contentActionsAX {
    font-size: 80%;
}

#content dd.actionMenuContentAX {
    padding: 0;
    margin: 0;
}

/* </dtml-with> */

/* DOCUMENTATION ON PRE-DEFINED PROPERTIES FROM PLONE */

 /* You can insert colors and other variables from Plone's 
    base_properties by doing:
    
    & dtml-variableName ; (without the spaces, excluded here to not make it render)
    
    Example:
    
    myLink {
        color: & dtml-fontColor ;   (again, without the spaces)
    }
 
   This means you can generate your own elements that use Plone's defaults,
   and respect any customizations people have done. See base_properties for
   the default values.
 
   These are the available properties:
   
   logoName - the file name of the portal logo
   
   fontFamily - the font family used for all text that is not headers
   
   fontBaseSize - the base font size that everything is calculated from
   
   fontColor - the main font color
   
   fontSmallSize - used for various elements like buttons and discreet text
   
   discreetColor - the font color of discreet text

   backgroundColor - the background color 
   
   linkColor - the color used on normal links

   linkActiveColor - color used on active links

   linkVisitedColor - color used on visited links
   
   borderWidth - the width of most borders in Plone
   
   borderStyle - the style of the border lines, normally solid
   
   borderStyleAnnotations - style of border lines on comments etc
   
   globalBorderColor - the border color used on the main tabs, the portlets etc
   
   globalBackgroundColor - background color for the selected tabs, portlet headings etc
   
   globalFontColor - the color of the font in the tabs and in portlet headings
   
   headingFontFamily - font family for h1/h2/h3/h4/h5/h6 headlines
   
   contentViewBorderColor - the content view tabs border color
   
   contentViewBackgroundColor - the content view tabs background color
   
   contentViewFontColor - the font color used in the content view tabs
   
   inputFontColor - the font color used for input elements
   
   textTransform - whether to lowercase text in portlets, tabs etc.
   
   evenRowBackgroundColor - the background color of even rows in listings
   
   oddRowBackgroundColor - the background color of even rows in listings
   
   notifyBorderColor - border color of notification elements like the status message, the calendar focus
   
   notifyBackgroundColor - background color of notification elements like the status message, the calendar focus
   
   helpBackgroundColor - background color of information pop-ups (currently not used)
          
 */


